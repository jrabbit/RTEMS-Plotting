Index: configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/configure.ac,v
retrieving revision 1.29
diff -u -r1.29 configure.ac
--- configure.ac	1 Jun 2008 05:07:57 -0000	1.29
+++ configure.ac	9 Sep 2009 18:35:59 -0000
@@ -26,6 +26,7 @@
 RTEMS_ENABLE_ITRON
 RTEMS_ENABLE_NETWORKING
 RTEMS_ENABLE_CXX
+RTEMS_ENABLE_COVERAGE
 RTEMS_ENABLE_TESTS  
 RTEMS_ENABLE_RTEMS_DEBUG
 RTEMS_ENABLE_RTEMSBSP
Index: aclocal/enable-coverage.m4
===================================================================
RCS file: aclocal/enable-coverage.m4
diff -N aclocal/enable-coverage.m4
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ aclocal/enable-coverage.m4	9 Sep 2009 18:35:59 -0000
@@ -0,0 +1,15 @@
+dnl $Id: rtems-49-20090909.diff,v 1.1 2009/09/09 20:00:48 joel Exp $
+
+AC_DEFUN([RTEMS_ENABLE_COVERAGE],
+[
+AC_ARG_ENABLE(coverage,
+[AS_HELP_STRING([--enable-coverage],
+[enable building for coverage testing])],
+[case "${enable_coverage}" in
+  yes) RTEMS_HAS_COVERAGE=yes ;;
+  exp*) RTEMS_HAS_COVERAGE=yes ; RTEMS_HAS_EXPERIMENTAL_COVERAGE=yes ;;
+  no) RTEMS_HAS_COVERAGE=no   ;;
+  *)  AC_MSG_ERROR(bad value ${enableval} for enable-coverage option) ;;
+esac], [RTEMS_HAS_COVERAGE=no])
+AC_SUBST(RTEMS_HAS_COVERAGE)
+])
Index: c/src/make/Makefile.inc.in
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/Makefile.inc.in,v
retrieving revision 1.11
diff -u -r1.11 Makefile.inc.in
--- c/src/make/Makefile.inc.in	18 Sep 2007 17:55:35 -0000	1.11
+++ c/src/make/Makefile.inc.in	9 Sep 2009 18:35:59 -0000
@@ -40,6 +40,7 @@
 RTEMS_HAS_POSIX_API = @RTEMS_HAS_POSIX_API@
 RTEMS_HAS_ITRON_API = @RTEMS_HAS_ITRON_API@
 RTEMS_HAS_CPLUSPLUS = @RTEMS_HAS_CPLUSPLUS@
+RTEMS_HAS_COVERAGE = @RTEMS_HAS_COVERAGE@
 
 export RTEMS_BSP
 export RTEMS_CUSTOM
Index: c/src/make/bsp.cfg.in
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/bsp.cfg.in,v
retrieving revision 1.5
diff -u -r1.5 bsp.cfg.in
--- c/src/make/bsp.cfg.in	4 Aug 2007 05:45:16 -0000	1.5
+++ c/src/make/bsp.cfg.in	9 Sep 2009 18:35:59 -0000
@@ -26,6 +26,11 @@
 HAS_CPLUSPLUS = @HAS_CPLUSPLUS@
 
 ##
+## Is this BSP being built to do coverage testing?
+##
+RTEMS_HAS_COVERAGE = @RTEMS_HAS_COVERAGE@
+
+##
 ## Does this BSP support RTEMS's networking ?
 ##
 HAS_NETWORKING = @HAS_NETWORKING@
Index: c/src/make/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/configure.ac,v
retrieving revision 1.27
diff -u -r1.27 configure.ac
--- c/src/make/configure.ac	2 Aug 2007 14:59:41 -0000	1.27
+++ c/src/make/configure.ac	9 Sep 2009 18:35:59 -0000
@@ -23,6 +23,7 @@
 RTEMS_ENABLE_NETWORKING
 RTEMS_ENABLE_CXX
 RTEMS_ENABLE_BARE
+RTEMS_ENABLE_COVERAGE
 
 RTEMS_ENV_RTEMSBSP
 
@@ -69,6 +70,7 @@
 
 AC_SUBST(rtems_cv_prog_cc_cross)
 AC_SUBST(RTEMS_HAS_CPLUSPLUS)
+AC_SUBST(RTEMS_HAS_COVERAGE)
 AC_SUBST(BARE_CPU_CFLAGS)
 AC_SUBST(BARE_CPU_MODEL)
 AC_SUBST(program_prefix)
Index: c/src/make/leaf.cfg
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/leaf.cfg,v
retrieving revision 1.8.2.1
diff -u -r1.8.2.1 leaf.cfg
--- c/src/make/leaf.cfg	15 Sep 2008 17:43:44 -0000	1.8.2.1
+++ c/src/make/leaf.cfg	9 Sep 2009 18:35:59 -0000
@@ -41,8 +41,10 @@
 # Create a RTEMS executable based on MANAGERS which was set in
 #  app's Makefile
 
-MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
-	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
+ifneq ($(RTEMS_HAS_COVERAGE),yes)
+  MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
+ 	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
+endif
 
 # Start file must be one of
 #    $(PROJECT_RELEASE)/lib/start$(LIB_VARIANT).o
@@ -65,14 +67,18 @@
 
 DOWNEXT=.ralf
 
+ifeq ($(RTEMS_HAS_COVERAGE),yes)
+   COV_ARGS=$(PROJECT_RELEASE)/lib/rtems_coverage.o
+ endif
+
 define bsp-link-c
 	$(LINK.c) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define bsp-link-cxx
 	$(LINK.cc) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define default-bsp-post-link
Index: c/src/make/target.cfg.in
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/target.cfg.in,v
retrieving revision 1.7
diff -u -r1.7 target.cfg.in
--- c/src/make/target.cfg.in	4 Aug 2007 05:45:16 -0000	1.7
+++ c/src/make/target.cfg.in	9 Sep 2009 18:35:59 -0000
@@ -37,6 +37,7 @@
 RTEMS_HAS_NETWORKING = @RTEMS_HAS_NETWORKING@
 RTEMS_HAS_RDBG = no
 RTEMS_HAS_CPLUSPLUS = @RTEMS_HAS_CPLUSPLUS@
+RTEMS_HAS_COVERAGE = @RTEMS_HAS_COVERAGE@
 RTEMS_CPU = @RTEMS_CPU@
 
 XCFLAGS=$(CFLAGS_FOR_TARGET)
@@ -55,6 +56,7 @@
 # Create a RTEMS executable based on MANAGERS which was set in
 #  app's Makefile
 
-MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
+ifneq ($(RTEMS_HAS_COVERAGE),yes)
+  MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
 	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
-
+endif
Index: c/src/make/aclocal/enable-coverage.m4
===================================================================
RCS file: c/src/make/aclocal/enable-coverage.m4
diff -N c/src/make/aclocal/enable-coverage.m4
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ c/src/make/aclocal/enable-coverage.m4	9 Sep 2009 18:35:59 -0000
@@ -0,0 +1,15 @@
+dnl $Id: rtems-49-20090909.diff,v 1.1 2009/09/09 20:00:48 joel Exp $
+
+AC_DEFUN([RTEMS_ENABLE_COVERAGE],
+[
+AC_ARG_ENABLE(coverage,
+[AS_HELP_STRING([--enable-coverage],
+[enable building for coverage testing])],
+[case "${enable_coverage}" in
+  yes) RTEMS_HAS_COVERAGE=yes ;;
+  exp*) RTEMS_HAS_COVERAGE=yes ; RTEMS_HAS_EXPERIMENTAL_COVERAGE=yes ;;
+  no) RTEMS_HAS_COVERAGE=no   ;;
+  *)  AC_MSG_ERROR(bad value ${enableval} for enable-coverage option) ;;
+esac], [RTEMS_HAS_COVERAGE=no])
+AC_SUBST(RTEMS_HAS_COVERAGE)
+])
Index: cpukit/Makefile.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/Makefile.am,v
retrieving revision 1.77
diff -u -r1.77 Makefile.am
--- cpukit/Makefile.am	11 Jul 2008 10:07:00 -0000	1.77
+++ cpukit/Makefile.am	9 Sep 2009 18:35:59 -0000
@@ -16,6 +16,9 @@
 SUBDIRS += libmd
 SUBDIRS += libgnat
 SUBDIRS += wrapup
+if ENABLE_COVERAGE
+SUBDIRS += wrapup-coverage
+endif
 
 SUBDIRS += zlib
 
Index: cpukit/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/configure.ac,v
retrieving revision 1.146.2.1
diff -u -r1.146.2.1 configure.ac
--- cpukit/configure.ac	10 Sep 2008 15:43:54 -0000	1.146.2.1
+++ cpukit/configure.ac	9 Sep 2009 18:35:59 -0000
@@ -18,6 +18,7 @@
 RTEMS_ENABLE_ITRON
 RTEMS_ENABLE_RTEMS_DEBUG
 RTEMS_ENABLE_NETWORKING
+RTEMS_ENABLE_COVERAGE
 
 RTEMS_ENV_RTEMSCPU
 RTEMS_CHECK_RTEMS_DEBUG
@@ -172,6 +173,11 @@
   [1],
   [if networking is enabled])
 
+RTEMS_CPUOPT([RTEMS_COVERAGE],
+  [test x"$RTEMS_HAS_COVERAGE" = xyes],
+  [1],
+  [to indicate this is a coverage build])
+
 RTEMS_CPUOPT([RTEMS_UNIX],
   [test x"$RTEMS_CPU" = xunix],
   [1],
@@ -308,6 +314,10 @@
 && test x"$ac_cv_type_uint8_t" = xyes \
 && test x"$ac_cv_type_uint16_t" = xyes])
 
+AM_CONDITIONAL(ENABLE_COVERAGE,test x"$RTEMS_HAS_COVERAGE" = x"yes")
+AM_CONDITIONAL(ENABLE_EXPERIMENTAL_COVERAGE, \
+   test x"$RTEMS_HAS_EXPERIMENTAL_COVERAGE" = x"yes")
+
 AC_CONFIG_HEADER(config.h)
 
 ## These are needed by the NFS Client
@@ -355,7 +365,9 @@
 telnetd/Makefile
 pppd/Makefile
 shttpd/Makefile
-wrapup/Makefile])
+wrapup/Makefile
+wrapup-coverage/Makefile
+])
 
 AC_CONFIG_COMMANDS([preinstall-stamp],
 [test -z "$with_multisubdir" && ${MAKE} preinstall-stamp],
Index: cpukit/aclocal/enable-coverage.m4
===================================================================
RCS file: cpukit/aclocal/enable-coverage.m4
diff -N cpukit/aclocal/enable-coverage.m4
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/aclocal/enable-coverage.m4	9 Sep 2009 18:35:59 -0000
@@ -0,0 +1,15 @@
+dnl $Id: rtems-49-20090909.diff,v 1.1 2009/09/09 20:00:48 joel Exp $
+
+AC_DEFUN([RTEMS_ENABLE_COVERAGE],
+[
+AC_ARG_ENABLE(coverage,
+[AS_HELP_STRING([--enable-coverage],
+[enable building for coverage testing])],
+[case "${enable_coverage}" in
+  yes) RTEMS_HAS_COVERAGE=yes ;;
+  exp*) RTEMS_HAS_COVERAGE=yes ; RTEMS_HAS_EXPERIMENTAL_COVERAGE=yes ;;
+  no) RTEMS_HAS_COVERAGE=no   ;;
+  *)  AC_MSG_ERROR(bad value ${enableval} for enable-coverage option) ;;
+esac], [RTEMS_HAS_COVERAGE=no])
+AC_SUBST(RTEMS_HAS_COVERAGE)
+])
Index: cpukit/wrapup-coverage/.cvsignore
===================================================================
RCS file: cpukit/wrapup-coverage/.cvsignore
diff -N cpukit/wrapup-coverage/.cvsignore
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/wrapup-coverage/.cvsignore	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1,2 @@
+Makefile
+Makefile.in
Index: cpukit/wrapup-coverage/Makefile.am
===================================================================
RCS file: cpukit/wrapup-coverage/Makefile.am
diff -N cpukit/wrapup-coverage/Makefile.am
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/wrapup-coverage/Makefile.am	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1,135 @@
+##
+## $Id: rtems-49-20090909.diff,v 1.1 2009/09/09 20:00:48 joel Exp $
+##
+
+include $(top_srcdir)/automake/multilib.am
+include $(top_srcdir)/automake/compile.am
+
+## Setup the variant build subdirectory
+ARCH = o-optimize
+
+noinst_LIBRARIES = libcoverage.a
+project_lib_DATA = rtems_coverage.o
+libcoverage_a_SOURCES =
+
+noinst_LIBRARIES += libsupp.a
+libsupp_a_SOURCES = start_coverage.c end_coverage.c
+
+TMP_LIBS =
+# Only do coverage on portable code at this point
+#TMP_LIBS += ../score/cpu/@RTEMS_CPU@/libscorecpu.a
+TMP_LIBS += ../score/libscore.a
+TMP_LIBS += ../sapi/libsapi.a
+TMP_LIBS += ../rtems/librtems.a
+
+if LIBPOSIX
+TMP_LIBS += ../posix/libposix.a
+endif
+
+if LIBGNAT
+#TMP_LIBS += ../libgnat/libgnat.a
+endif
+
+if LIBITRON
+## Deprecated do not do coverage on ITRON
+#TMP_LIBS += ../itron/libitron.a
+endif
+
+if ENABLE_EXPERIMENTAL_COVERAGE
+TMP_LIBS += ../libcsupport/libcsupport.a
+endif
+
+#if !UNIX
+#TMP_LIBS += ../libblock/libblock.a
+#endif
+#if LIBDOSFS
+#TMP_LIBS += ../libfs/libdosfs.a
+#endif
+if ENABLE_EXPERIMENTAL_COVERAGE
+TMP_LIBS += ../libfs/libimfs.a
+endif
+
+#TMP_LIBS += ../libmisc/libmonitor.a
+## TODO: Coverage test libuntar
+#TMP_LIBS += ../libmisc/libuntar.a
+if ENABLE_EXPERIMENTAL_COVERAGE
+TMP_LIBS += ../libmisc/libstackchk.a
+TMP_LIBS += ../libmisc/libcpuuse.a
+endif
+
+#if LIBSHELL
+#TMP_LIBS += ../libmisc/libshell.a
+#endif
+
+if ENABLE_EXPERIMENTAL_COVERAGE
+TMP_LIBS += ../libmisc/libbspcmdline.a
+endif
+#TMP_LIBS += ../libmisc/libcapture.a
+if ENABLE_EXPERIMENTAL_COVERAGE
+TMP_LIBS += ../libmisc/libdumpbuf.a
+TMP_LIBS += ../libmisc/libdevnull.a
+endif
+
+## Dummy is dummy configuration -- DO NOT INCLUDE IT IN COVERAGE
+#TMP_LIBS += ../libmisc/libdummy.a
+
+#TMP_LIBS += ../libmisc/libfsmount.a
+#TMP_LIBS += ../libmisc/libmw-fb.a
+#TMP_LIBS += ../libmisc/libstringto.a
+#TMP_LIBS += ../libmisc/libuuid.a
+
+#TMP_LIBS += ../libi2c/libi2c.a
+
+## Do not coverage test networking code
+#if LIBNETWORKING
+#TMP_LIBS += ../libnetworking/libnetworking.a
+#TMP_LIBS += ../libnetworking/libc.a
+#TMP_LIBS += ../libnetworking/lib.a
+#endif
+
+#if LIBRPC
+#TMP_LIBS += ../librpc/librpc.a
+#TMP_LIBS += ../librpc/libxdr.a
+#endif
+
+## TODO: Coverage test libmd
+#if NEWLIB
+#TMP_LIBS += ../libmd/libmd.a
+#endif
+
+rtems_coverage.o: start_coverage.o end_coverage.o $(TMP_LIBS)
+	rm -f $@
+	$(MKDIR_P) $(ARCH)
+	rm -rf $(ARCH)/*.$(OBJEXT) $(ARCH)/*.rel
+	for f in $(TMP_LIBS); do \
+	  case $$f in \
+	  *.$(OBJEXT) | *.rel) \
+	    if test -f $(ARCH)/`basename $$f`; then \
+	      if cmp $$f $(ARCH)/`basename $$f`; then \
+		true; \
+	      else \
+		echo 1>&2 "ERROR -- `basename $$f` in multiple files"; \
+		exit 1; \
+	      fi; \
+	    else \
+	      cp $$f $(ARCH)/; \
+	      chmod a-w $(ARCH)/`basename $$f`; \
+	    fi; \
+	    ;; \
+	  *.a) \
+	    cd $(ARCH); \
+	      $(AR) xv ../$$f || exit 1; \
+	      chmod a-w * ; \
+            cd ..; \
+	    ;; \
+	  esac; \
+	done
+	ls $(ARCH)/* > $@-list
+	$(AR:ar=ld) -r -o $@ start_coverage.o @$@-list end_coverage.o
+	rm -f $@-list $(1)/*.$(OBJEXT) $(1)/*.rel
+	rm -rf $(1)
+
+all-local: $(TMPINSTALL_FILES)
+
+include $(srcdir)/preinstall.am
+include $(top_srcdir)/automake/local.am
Index: cpukit/wrapup-coverage/end_coverage.c
===================================================================
RCS file: cpukit/wrapup-coverage/end_coverage.c
diff -N cpukit/wrapup-coverage/end_coverage.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/wrapup-coverage/end_coverage.c	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1,2 @@
+void end_coverage(void){}
+
Index: cpukit/wrapup-coverage/preinstall.am
===================================================================
RCS file: cpukit/wrapup-coverage/preinstall.am
diff -N cpukit/wrapup-coverage/preinstall.am
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/wrapup-coverage/preinstall.am	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1,24 @@
+## Automatically generated by ampolish3 - Do not edit
+
+if AMPOLISH3
+$(srcdir)/preinstall.am: Makefile.am
+	$(AMPOLISH3) $(srcdir)/Makefile.am > $(srcdir)/preinstall.am
+endif
+
+PREINSTALL_DIRS =
+DISTCLEANFILES = $(PREINSTALL_DIRS)
+
+all-local: $(TMPINSTALL_FILES)
+
+TMPINSTALL_FILES =
+CLEANFILES = $(TMPINSTALL_FILES)
+
+$(PROJECT_LIB)/$(dirstamp):
+	@$(MKDIR_P) $(PROJECT_LIB)
+	@: > $(PROJECT_LIB)/$(dirstamp)
+PREINSTALL_DIRS += $(PROJECT_LIB)/$(dirstamp)
+
+$(PROJECT_LIB)/rtems_coverage.o: rtems_coverage.o $(PROJECT_LIB)/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_LIB)/rtems_coverage.o
+TMPINSTALL_FILES += $(PROJECT_LIB)/rtems_coverage.o
+
Index: cpukit/wrapup-coverage/start_coverage.c
===================================================================
RCS file: cpukit/wrapup-coverage/start_coverage.c
diff -N cpukit/wrapup-coverage/start_coverage.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cpukit/wrapup-coverage/start_coverage.c	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1 @@
+void start_coverage(void){}
Index: make/leaf.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/leaf.cfg,v
retrieving revision 1.23.2.1
diff -u -r1.23.2.1 leaf.cfg
--- make/leaf.cfg	15 Sep 2008 17:43:39 -0000	1.23.2.1
+++ make/leaf.cfg	9 Sep 2009 18:36:00 -0000
@@ -116,14 +116,18 @@
 
 DOWNEXT=.ralf
 
+ifeq ($(RTEMS_HAS_COVERAGE),yes)
+  COV_ARGS=$(PROJECT_RELEASE)/lib/rtems_coverage.o
+endif
+
 define bsp-link-c
 	$(LINK.c) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define bsp-link-cxx
 	$(LINK.cc) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define default-bsp-post-link
Index: make/compilers/gcc-no_bsp.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/compilers/gcc-no_bsp.cfg,v
retrieving revision 1.12
diff -u -r1.12 gcc-no_bsp.cfg
--- make/compilers/gcc-no_bsp.cfg	9 May 2007 18:53:32 -0000	1.12
+++ make/compilers/gcc-no_bsp.cfg	9 Sep 2009 18:36:00 -0000
@@ -231,8 +231,10 @@
 
 # Create a RTEMS executable based on MANAGERS which was set in app's Makefile
 
+ifneq ($(RTEMS_HAS_COVERAGE),yes)
 MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS), $(MANAGER_LIST))
 MANAGERS_NOT_WANTED:=$(filter-out $(MANAGERS_REQUIRED), $(MANAGERS_NOT_WANTED))
+endif
 
 # Start file must be one of
 # Note:  Normally RTEMS provides a start file...
Index: make/compilers/gcc-target-default.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/compilers/gcc-target-default.cfg,v
retrieving revision 1.39
diff -u -r1.39 gcc-target-default.cfg
--- make/compilers/gcc-target-default.cfg	9 Sep 2008 16:30:27 -0000	1.39
+++ make/compilers/gcc-target-default.cfg	9 Sep 2009 18:36:00 -0000
@@ -204,3 +204,9 @@
 	$(LINK.c) $(CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
 	  -qnolinkcmds -nostdlib -Wl,-r $(XLDFLAGS) -o $@ $^
 endef
+
+ifeq ($(RTEMS_HAS_COVERAGE),yes)
+  CFLAGS_OPTIMIZE_V = -Os -g
+else
+  CFLAGS_OPTIMIZE_V = -O2 -g
+endif
Index: testsuites/aclocal/enable-coverage.m4
===================================================================
RCS file: testsuites/aclocal/enable-coverage.m4
diff -N testsuites/aclocal/enable-coverage.m4
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ testsuites/aclocal/enable-coverage.m4	9 Sep 2009 18:36:00 -0000
@@ -0,0 +1,15 @@
+dnl $Id: rtems-49-20090909.diff,v 1.1 2009/09/09 20:00:48 joel Exp $
+
+AC_DEFUN([RTEMS_ENABLE_COVERAGE],
+[
+AC_ARG_ENABLE(coverage,
+[AS_HELP_STRING([--enable-coverage],
+[enable building for coverage testing])],
+[case "${enable_coverage}" in
+  yes) RTEMS_HAS_COVERAGE=yes ;;
+  exp*) RTEMS_HAS_COVERAGE=yes ; RTEMS_HAS_EXPERIMENTAL_COVERAGE=yes ;;
+  no) RTEMS_HAS_COVERAGE=no   ;;
+  *)  AC_MSG_ERROR(bad value ${enableval} for enable-coverage option) ;;
+esac], [RTEMS_HAS_COVERAGE=no])
+AC_SUBST(RTEMS_HAS_COVERAGE)
+])
Index: testsuites/itrontests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/itrontests/configure.ac,v
retrieving revision 1.19
diff -u -r1.19 configure.ac
--- testsuites/itrontests/configure.ac	2 Dec 2006 06:05:03 -0000	1.19
+++ testsuites/itrontests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -12,7 +12,6 @@
 AM_INIT_AUTOMAKE([no-define foreign 1.10])
 AM_MAINTAINER_MODE
 
-
 RTEMS_ENV_RTEMSBSP
 
 RTEMS_PROJECT_ROOT
@@ -23,6 +22,8 @@
 
 RTEMS_CHECK_CUSTOM_BSP(RTEMS_BSP)
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
 
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
Index: testsuites/libtests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/libtests/configure.ac,v
retrieving revision 1.20
diff -u -r1.20 configure.ac
--- testsuites/libtests/configure.ac	9 Jan 2008 19:01:28 -0000	1.20
+++ testsuites/libtests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -28,9 +28,11 @@
 RTEMS_CHECK_CUSTOM_BSP(RTEMS_BSP)
 RTEMS_CHECK_CXX(RTEMS_BSP)
 
-
 AM_CONDITIONAL(HAS_CXX,test "$rtems_cv_HAS_CPLUSPLUS" = "yes")
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
 cpuuse/Makefile
Index: testsuites/mptests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/mptests/configure.ac,v
retrieving revision 1.21
diff -u -r1.21 configure.ac
--- testsuites/mptests/configure.ac	2 Dec 2006 06:05:19 -0000	1.21
+++ testsuites/mptests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -31,6 +31,9 @@
 AC_ARG_VAR([MAX_LONG_TEST_DURATION],
 [The longest length of time a "long running" test should run])
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
 mp01/Makefile
Index: testsuites/psxtests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/psxtests/configure.ac,v
retrieving revision 1.31
diff -u -r1.31 configure.ac
--- testsuites/psxtests/configure.ac	4 Feb 2008 19:39:43 -0000	1.31
+++ testsuites/psxtests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -25,6 +25,9 @@
 
 AM_CONDITIONAL([HAS_NETWORKING],[test "$HAS_NETWORKING" = "yes"])
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
 psx01/Makefile
Index: testsuites/samples/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/samples/configure.ac,v
retrieving revision 1.29
diff -u -r1.29 configure.ac
--- testsuites/samples/configure.ac	17 Aug 2007 01:07:10 -0000	1.29
+++ testsuites/samples/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -58,6 +58,9 @@
 #FIXME: We should use a feature based check
 AM_CONDITIONAL(LIBCHIP,[test "$RTEMS_BSP_FAMILY" != "posix"])
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
 base_sp/Makefile
Index: testsuites/sptests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/sptests/configure.ac,v
retrieving revision 1.34.2.3
diff -u -r1.34.2.3 configure.ac
--- testsuites/sptests/configure.ac	21 Jan 2009 20:48:07 -0000	1.34.2.3
+++ testsuites/sptests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -25,6 +25,9 @@
 RTEMS_CHECK_CUSTOM_BSP(RTEMS_BSP)
 
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 # Explicitly list all Makefiles here
 AC_CONFIG_FILES([Makefile
 sp01/Makefile
Index: testsuites/tmitrontests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/tmitrontests/configure.ac,v
retrieving revision 1.20
diff -u -r1.20 configure.ac
--- testsuites/tmitrontests/configure.ac	2 Dec 2006 06:05:51 -0000	1.20
+++ testsuites/tmitrontests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -23,6 +23,9 @@
 
 RTEMS_CHECK_CUSTOM_BSP(RTEMS_BSP)
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 
 OPERATION_COUNT=${OPERATION_COUNT-100}
 AC_SUBST(OPERATION_COUNT)
Index: testsuites/tmtests/configure.ac
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/tmtests/configure.ac,v
retrieving revision 1.20
diff -u -r1.20 configure.ac
--- testsuites/tmtests/configure.ac	2 Dec 2006 06:05:59 -0000	1.20
+++ testsuites/tmtests/configure.ac	9 Sep 2009 18:36:00 -0000
@@ -24,6 +24,9 @@
 
 RTEMS_CHECK_CUSTOM_BSP(RTEMS_BSP)
 
+RTEMS_ENABLE_COVERAGE
+AM_CONDITIONAL([HAS_COVERAGE],[test $RTEMS_HAS_COVERAGE = "yes"])
+
 
 OPERATION_COUNT=${OPERATION_COUNT-100}
 AC_SUBST(OPERATION_COUNT)
